name: CI Flask App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del código
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar versión de Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.2"

      # 3. Configurar variables de entorno desde secrets
      - name: Setup environment variables
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: |
          echo "DB_HOST=$DB_HOST" >> $GITHUB_ENV
          echo "DB_USER=$DB_USER" >> $GITHUB_ENV
          echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV
          echo "DB_NAME=$DB_NAME" >> $GITHUB_ENV
          echo "DB_PORT=3306" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=$JWT_SECRET_KEY" >> $GITHUB_ENV
          echo "JWT_ALGORITHM=HS256" >> $GITHUB_ENV
          echo "FLASK_ENV=testing" >> $GITHUB_ENV

      # 4. Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 5. Linter 
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # 6. Tests 
      - name: Run tests
        run: |
          pip install pytest
          pytest -v || echo "No tests found"

      # 7. Correr la app 
      - name: Run Flask app
        run: |
          nohup python app.py &
          sleep 10
          curl -f http://127.0.0.1:5000/health || (echo "App did not start" && exit 1)